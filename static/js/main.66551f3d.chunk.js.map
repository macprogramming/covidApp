{"version":3,"sources":["components/Header.jsx","components/Custumcard.jsx","components/Dashboard.jsx","components/PiechartPage.jsx","components/Custompanel.jsx","components/TableView.jsx","App.js","index.js"],"names":["Header","className","exact","to","Custumcard","props","Card","bgclass","txtclass","title","value","Dashboard","useState","data","setData","isSelectItem","setIsSelectItem","showResult","setShowResult","covidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","htmlFor","id","onChange","e","resultData","filter","currData","state","target","changeData","disabled","map","sData","index","statecode","lastupdatedtime","active","confirmed","deaths","recovered","PiechartPage","Math","PI","top5state","setTop5state","ResponsiveContainer","width","aspect","BarChart","height","XAxis","dataKey","interval","YAxis","Legend","Tooltip","CartesianGrid","stroke","strokeDasharray","Bar","fill","barSize","sortedActiveState","sort","b","slice","sortedConfiState","sortedDeathsState","sortedRecoveredState","top5date","selected","tickFormatter","number","toString","Custompanel","stateIndex","stateName","activeCase","confiCase","deathCase","recoverCase","TableView","i","length","push","stateCode","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66551f3d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <>\r\n            <header className=\"d-flex justify-content-center py-3 bg-light\">\r\n                <h2 className=\"text-warning\">Covid-19 Dashboard</h2>\r\n            </header>\r\n            <header className=\"d-flex flex-wrap justify-content-end py-3 mb-4 bg-white\">\r\n                <ul className=\"nav nav-pills\">\r\n                    <NavLink exact to=\"/\" className=\"nav-link\">Dashboard</NavLink>\r\n                    <NavLink to=\"/tableView\" className=\"nav-link\">Table View</NavLink>\r\n                    <NavLink to=\"/pieChart\" className=\"nav-link\">Piechart</NavLink>                        \r\n                </ul>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nconst Custumcard = (props) => {\r\n    return(\r\n        <>\r\n            <div className=\"col-xs-12 col-sm-12 col-md-3 col-lg-3\">\r\n                <Card className={\"card mb-2 \" + props.bgclass}>\r\n                    <div className={\"card-header \" + props.txtclass}>\r\n                        <div>{props.title}</div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"text-center\">\r\n                            <h4 className=\"card-text text-white\"><span>{props.value}</span></h4>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Custumcard;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Header from \"./Header\";\r\nimport Custumcard from \"./Custumcard\";\r\nconst Dashboard = () => {\r\n    const [data, setData] = useState([]);\r\n    const [isSelectItem, setIsSelectItem] = useState([]);\r\n    const [showResult, setShowResult] = useState(false)\r\n    \r\n    \r\n    const covidData = async() =>{\r\n        setShowResult(true)\r\n        const res = await fetch(\"https://api.covid19india.org/data.json\");\r\n        const actualData = await res.json();\r\n\r\n        console.log(actualData.statewise[1]);\r\n        setData(actualData.statewise);\r\n        setIsSelectItem(actualData.statewise[0]);\r\n    }\r\n\r\n    const useEffecte = useEffect(() => {\r\n        covidData();\r\n    }, []);\r\n\r\n    const changeData = (e) => {        \r\n        setShowResult(true)\r\n        var resultData = data.filter( (currData) => {\r\n            return currData.state == e.target.value\r\n        })\r\n        setIsSelectItem(resultData[0]);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">                \r\n                <Header />\r\n                <section>\r\n                    <div className=\"row\">\r\n                        <div className=\"mt-3\">\r\n                            <form>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-4 col-lg-3 col-xs-4\">\r\n                                        <div className=\"mb-3\">\r\n                                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">State</label>                                                                                       \r\n                                            <select id=\"disabledSelect\" className=\"form-select\" onChange={e => changeData(e)}>\r\n                                                <option disabled>--Select--</option>\r\n                                                {\r\n                                                    data.map((sData, index) => {\r\n                                                        return(\r\n                                                            <>                                                         \r\n                                                                <option value={sData.state} key={index}>{\r\n                                                                    \r\n                                                                    sData.state === \"Total\" ? \"All Over India\" : sData.state\r\n                                                                    \r\n                                                                }</option>\r\n                                                            </>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                                 \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    {showResult ? \r\n                    <div className=\"row\">\r\n                                    \r\n                        <h6 className=\"mb-2\">Location : <span className=\"text-primary\">{isSelectItem.state === \"Total\" ? \"All Over India\" : isSelectItem.state + \" (\" + isSelectItem.statecode + \")\"}</span></h6>\r\n                        <h6 className=\"mb-3 pull-right fs12\">Last update : <span className=\"text-danger\">{isSelectItem.lastupdatedtime}</span></h6>\r\n                            <Custumcard   \r\n                                bgclass=\"bg-primary\"                             \r\n                                title=\"Active Cases\"\r\n                                value={isSelectItem.active}\r\n                                txtclass=\"text-primary\"\r\n                            />\r\n                            <Custumcard       \r\n                                bgclass=\"bg-warning\"                         \r\n                                title=\"Confirmed Cases\"\r\n                                value={isSelectItem.confirmed}\r\n                                txtclass=\"text-warning\"\r\n                            />\r\n                            <Custumcard                          \r\n                                bgclass=\"bg-danger\"      \r\n                                title=\"Deaths Cases\"\r\n                                value={isSelectItem.deaths}\r\n                                txtclass=\"text-danger\"\r\n                            />\r\n                            <Custumcard                  \r\n                                bgclass=\"bg-success\"              \r\n                                title=\"Recovered Cases\"\r\n                                value={isSelectItem.recovered}\r\n                                txtclass=\"text-success\"\r\n                            />\r\n                        </div>: null\r\n                    }\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n//import { PieChart, Pie, Sector, Cell,Tooltip, ResponsiveContainer, LineChart, Line } from 'recharts';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,AreaChart,Area } from 'recharts';\r\nimport Custumcard from \"./Custumcard\";\r\nimport { Card } from '@material-ui/core';\r\n\r\n\r\nconst chartData = [\r\n    { name: 'Group A', value: 400 },\r\n    { name: 'Group B', value: 500 },\r\n    { name: 'Group C', value: 500 },\r\n    { name: 'Group D', value: 200 },\r\n];\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\nconst PiechartPage = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isSelectItem, setIsSelectItem] = useState([]);\r\n    const [showResult, setShowResult] = useState(false);\r\n    const [top5state, setTop5state] = useState([]);\r\n    \r\n    \r\n    const covidData = async() =>{\r\n        const res = await fetch(\"https://api.covid19india.org/data.json\");\r\n        const actualData = await res.json();\r\n\r\n        //console.log(actualData.statewise);\r\n        setData(actualData.statewise);\r\n        setIsSelectItem(actualData.statewise[0]);        \r\n        //setTop5state(actualData.statewise[]);        \r\n    }\r\n\r\n    const useEffecte = useEffect(() => {\r\n        covidData();        \r\n    }, []);\r\n\r\n    const changeData = (e) => {        \r\n        setShowResult(true)\r\n        var resultData = data.filter( (currData) => {\r\n            return currData.state == e.target.value\r\n        })       \r\n        //console.log(resultData);\r\n        setIsSelectItem(resultData);\r\n    }\r\n    \r\n    const top5date = (e) => {        \r\n        let sortedActiveState = data.sort((a, b) => b.active - a.active).slice(1,6);\r\n        let sortedConfiState = data.sort((a, b) => b.confirmed - a.confirmed).slice(1,6);\r\n        let sortedDeathsState = data.sort((a, b) => b.deaths - a.deaths).slice(1,6);\r\n        let sortedRecoveredState = data.sort((a, b) => b.recovered - a.recovered).slice(1,6);\r\n        if(e.target.value == \"Top 5 Active Cases State\"){\r\n            setTop5state(sortedActiveState)\r\n        }else if(e.target.value == \"Top 5 Confirmed Cases State\"){\r\n            setTop5state(sortedConfiState)\r\n        }else if(e.target.value == \"Top 5 Death Cases State\"){\r\n            setTop5state(sortedDeathsState)\r\n        }else if(e.target.value == \"Top 5 Recovered Cases State\"){\r\n            setTop5state(sortedRecoveredState)\r\n        }else{\r\n            console.log(\"null\")\r\n        }       \r\n    }\r\n    const DataFormater = (number) => {\r\n        if(number > 1000000000){\r\n          return (number/1000000000).toString() + 'B';\r\n        }else if(number > 1000000){\r\n          return (number/1000000).toString() + 'M';\r\n        }else if(number > 1000){\r\n          return (number/1000).toString() + 'K';\r\n        }else{\r\n          return number.toString();\r\n        }\r\n      }\r\n\r\n    return (\r\n        <>\r\n             <div className=\"container\">                 \r\n                 <Header />\r\n                 <section>\r\n                    <div className=\"row\">                        \r\n                        <div className=\"col-xs-12 col-sm-12 col-md-5 col-lg-5 mt-3\">\r\n                            <Card className=\"card\">\r\n                                <div className=\"card-header border-bottom\">\r\n                                    <h5>State Data</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"c0l-md-6 col-lg-6 col-xs-12\">\r\n                                                <div className=\"mb-3\">\r\n                                                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">State</label>                                                                                       \r\n                                                    <select id=\"disabledSelect\" className=\"form-select\" onChange={e => changeData(e)}>\r\n                                                        <option disabled>--Select--</option>\r\n                                                        {\r\n                                                            data.map((sData, index) => {\r\n                                                                return(\r\n                                                                    <>                                                         \r\n                                                                        <option value={sData.state}>{\r\n                                                                    \r\n                                                                            sData.state === \"Total\" ? \"All Over India\" : sData.state\r\n                                                                    \r\n                                                                        }</option>\r\n                                                                    </>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>                                    \r\n                                    \r\n                                    <ResponsiveContainer width=\"100%\" aspect={3}>\r\n                                        <BarChart data={isSelectItem} width={600} height={300} className=\"cutomPiechart\">                                            \r\n                                            <XAxis dataKey=\"state\" interval={'preserveStartEnd'} />\r\n                                            <YAxis dataKey=\"active\" />\r\n\r\n                                            <Legend dataKey=\"Active\" />\r\n                                            <Legend dataKey=\"Confirmed\" />\r\n                                            <Legend dataKey=\"Deaths\" />\r\n                                            <Legend dataKey=\"Recovered\" />\r\n\r\n                                            <Tooltip />\r\n                                            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\r\n\r\n                                            <Bar dataKey=\"active\" fill=\"#0d6efd\" barSize={50} />\r\n                                            <Bar dataKey=\"confirmed\" fill=\"#ffc107\" barSize={50} />\r\n                                            <Bar dataKey=\"deaths\" fill=\"#fd1c3199\" barSize={50} />\r\n                                            <Bar dataKey=\"recovered\" fill=\"#198754\" barSize={50} />\r\n                                        </BarChart>\r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-7 col-lg-7 mt-3\">\r\n                            <Card className=\"card\">\r\n                                <div className=\"card-header border-bottom\">\r\n                                    <h5>Top 5 State</h5>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <form>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6 col-lg-6 col-xs-12\">\r\n                                                <div className=\"mb-3\">\r\n                                                    <label htmlFor=\"top5State\" className=\"form-label\">State</label>                                                                                       \r\n                                                    <select id=\"top5State\" className=\"form-select\" onChange={e => top5date(e)}>\r\n                                                        <option disabled selected>--Select--</option>\r\n                                                        <option value=\"Top 5 Active Cases State\">Top 5 Active Cases State</option>                                                        \r\n                                                        <option value=\"Top 5 Confirmed Cases State\">Top 5 Confirmed Cases State</option>                                                        \r\n                                                        <option value=\"Top 5 Death Cases State\">Top 5 Active Death State</option>                                                        \r\n                                                        <option value=\"Top 5 Recovered Cases State\">Top 5 Recovered Cases State</option>                                                        \r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>                                    \r\n                                    \r\n                                    <ResponsiveContainer width=\"100%\" aspect={3}>\r\n                                        <BarChart data={top5state} width={600} height={300}>                                            \r\n                                            <XAxis dataKey=\"state\" interval={'preserveStartEnd'} />\r\n                                            {/* <YAxis dataKey=\"active\" /> */}\r\n                                            {/* <YAxis type=\"number\" dataKey=\"active\" domain={[0, 20000]}/> */}\r\n                                            <YAxis tickFormatter={DataFormater}/>\r\n\r\n                                            <Legend dataKey=\"Active\" />\r\n                                            <Legend dataKey=\"Confirmed\" />\r\n                                            <Legend dataKey=\"Deaths\" />\r\n                                            <Legend dataKey=\"Recovered\" />\r\n\r\n                                            <Tooltip />\r\n                                            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\r\n\r\n                                            <Bar dataKey=\"active\" fill=\"#0d6efd\" barSize={20} />\r\n                                            <Bar dataKey=\"confirmed\" fill=\"#ffc107\" barSize={20} />\r\n                                            <Bar dataKey=\"deaths\" fill=\"#fd1c3199\" barSize={20} />\r\n                                            <Bar dataKey=\"recovered\" fill=\"#198754\" barSize={20} />\r\n                                        </BarChart>\r\n                                        \r\n                                    </ResponsiveContainer>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                 </section>\r\n             </div>\r\n         </>    \r\n    );\r\n}\r\n\r\nexport default PiechartPage;","import react from 'react';\r\n\r\nconst Custompanel = (props) => {\r\n    return(\r\n        <>            \r\n            <div className=\"row\">\r\n                <div className=\"col col-md-1\">{props.stateIndex}</div>\r\n                <div className=\"col col-md-3\">{props.stateName}</div>\r\n                <div className=\"col col-md-2\">{props.activeCase}</div>\r\n                <div className=\"col col-md-2\">{props.confiCase}</div>\r\n                <div className=\"col col-md-2\">{props.deathCase}</div>\r\n                <div className=\"col col-md-2\">{props.recoverCase}</div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Custompanel;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport Header from \"./Header\";\r\nimport Custumcard from \"./Custumcard\";\r\nimport Custompanel from './Custompanel';\r\nconst TableView = () => {\r\n    const [data, setData] = useState([]);\r\n    const [isSelectItem, setIsSelectItem] = useState([]);\r\n    //const [showResult, setShowResult] = useState(false)\r\n    \r\n    \r\n    const covidData = async() =>{\r\n        const res = await fetch(\"https://api.covid19india.org/data.json\");\r\n        const actualData = await res.json();\r\n\r\n        //console.log(actualData.statewise[1]);\r\n        for(let i = 0; i< actualData.statewise.length; i++){\r\n            data.push(actualData.statewise[i].state)\r\n        }\r\n        setData(actualData.statewise);\r\n        //setData(data);\r\n        console.log(data);\r\n    }\r\n\r\n    const useEffecte = useEffect(() => {\r\n        covidData();\r\n    }, []);\r\n\r\n    const changeData = (e) => {   \r\n        var resultData = data.filter( (currData) => {\r\n            return currData.state == e.target.value\r\n        })\r\n        setIsSelectItem(resultData[0]);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"container\">\r\n                \r\n                <Header />\r\n                <section>\r\n                    {/* <div className=\"row\">\r\n                        <form>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4 col-lg-3 col-xs-4\">\r\n                                    <div className=\"mb-3\">                            \r\n                                        <input className=\"form-control\" list=\"datalistOptions\" id=\"exampleDataList\" placeholder=\"Type to search...\" onChange={e => changeData(e)} />\r\n                                        <datalist id=\"datalistOptions\">\r\n                                            {\r\n                                                data.map((sData, index) => {\r\n                                                    return(\r\n                                                        <option value={sData.state} key={index} />                                                    \r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </datalist>                                                                                                                    \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4 col-lg-3 col-xs-4\">\r\n                                    <div className=\"mb-3\">\r\n                                        <select id=\"disabledSelect\" className=\"form-select\" onChange={e => changeData(e)}>\r\n                                            <option value=\"\" selected disabled>--Select--</option>\r\n                                            {\r\n                                                data.map((sData, index) => {\r\n                                                    return(\r\n                                                        <>                                                         \r\n                                                            <option value={sData.state} key={index}>{\r\n                                                                \r\n                                                                sData.state === \"Total\" ? \"All Over India\" : sData.state\r\n                                                                \r\n                                                            }</option>\r\n                                                        </>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>                                                                                                                 \r\n                                    </div>\r\n                                </div>\r\n                            </div>                                 \r\n                        </form>\r\n                    </div> */}\r\n\r\n                    <div className=\"row\">\r\n                                    \r\n                        {/* <h6 className=\"mb-2\">Location : <span className=\"text-primary\">{isSelectItem.state === \"Total\" ? \"All Over India\" : isSelectItem.state + \" (\" + isSelectItem.statecode + \")\"}</span></h6>\r\n                        <h6 className=\"mb-3 pull-right fs12\">Last update : <span className=\"text-danger\">{isSelectItem.lastupdatedtime}</span></h6>                             */}\r\n                            <div className=\"panel-group\">                        \r\n                                <div className=\"panel panel-primary\">\r\n                                    <div className=\"panel-heading\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-1\">Sr.No</div>\r\n                                            <div className=\"col-md-3\">State</div>\r\n                                            <div className=\"col-md-2\">Active Cases</div>\r\n                                            <div className=\"col-md-2\">Confirmed Cases</div>\r\n                                            <div className=\"col-md-2\">Deaths Cases</div>\r\n                                            <div className=\"col-md-2\">Recovered Cases</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"panel-body\">\r\n                                        {\r\n                                            data.map((sData, index) => {\r\n                                                return(\r\n                                                    <Custompanel \r\n                                                        stateIndex={index + 1}\r\n                                                        stateName={sData.state === \"Total\" ? \"All Over India\" : sData.state + \" (\" + sData.statecode + \")\"}\r\n                                                        stateCode={sData.stateCode}\r\n                                                        activeCase={sData.active}\r\n                                                        confiCase={sData.confirmed}\r\n                                                        deathCase={sData.deaths}\r\n                                                        recoverCase={sData.recovered}\r\n                                                    />\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>                                    \r\n                        </div>                   \r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableView;","import React from 'react'\nimport Dashboard from \"./components/Dashboard\";\nimport {Route, Switch} from \"react-router-dom\";\nimport PiechartPage from \"./components/PiechartPage\";\nimport TableView from \"./components/TableView\"\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard}></Route>\n        <Route exact path=\"/piechart\" component={PiechartPage}></Route>\n        <Route exact path=\"/tableView\" component={TableView}></Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </>,\n  document.getElementById(\"root\")\n)\n\n"],"sourceRoot":""}